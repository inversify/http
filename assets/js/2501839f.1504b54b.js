"use strict";(self.webpackChunk_inversifyjs_inversify_http_docs_site=self.webpackChunk_inversifyjs_inversify_http_docs_site||[]).push([["488"],{3350:function(e,r,s){s.r(r),s.d(r,{frontMatter:()=>a,toc:()=>c,default:()=>h,metadata:()=>t,assets:()=>o,contentTitle:()=>d});var t=JSON.parse('{"id":"api/inversify-http-adapter/inversify-http-adapter","title":"InversifyHttpAdapter (Base Class)","description":"The base class all HTTP adapters extend (Express 4/5, Fastify, Hono, etc.). It wires controllers, guards, pipes, middleware, and interceptors into a working HTTP server. You generally consume its public methods from an adapter instance; if you are building a new adapter, implement the protected abstract methods described below.","source":"@site/docs/api/inversify-http-adapter/inversify-http-adapter.mdx","sourceDirName":"api/inversify-http-adapter","slug":"/api/inversify-http-adapter/","permalink":"/http/docs/api/inversify-http-adapter/","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":1,"frontMatter":{"sidebar_position":1,"title":"InversifyHttpAdapter (Base Class)"},"sidebar":"tutorialSidebar","previous":{"title":"Decorator","permalink":"/http/docs/api/decorators"},"next":{"title":"Open API","permalink":"/http/docs/ecosystem/open-api"}}'),n=s(9970),l=s(7245),i=s(941);let a={sidebar_position:1,title:"InversifyHttpAdapter (Base Class)"},d="InversifyHttpAdapter",o={},c=[{value:"Type parameters",id:"type-parameters",level:2},{value:"Constructor",id:"constructor",level:2},{value:"Public methods",id:"public-methods",level:2},{value:"applyGlobalMiddleware",id:"applyglobalmiddleware",level:3},{value:"useGlobalFilters",id:"useglobalfilters",level:3},{value:"applyGlobalGuards",id:"applyglobalguards",level:3},{value:"useGlobalInterceptors",id:"useglobalinterceptors",level:3},{value:"useGlobalPipe",id:"useglobalpipe",level:3},{value:"build",id:"build",level:3}];function p(e){let r={code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",hr:"hr",li:"li",p:"p",pre:"pre",ul:"ul",...(0,l.R)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(r.header,{children:(0,n.jsx)(r.h1,{id:"inversifyhttpadapter",children:"InversifyHttpAdapter"})}),"\n",(0,n.jsx)(r.p,{children:"The base class all HTTP adapters extend (Express 4/5, Fastify, Hono, etc.). It wires controllers, guards, pipes, middleware, and interceptors into a working HTTP server. You generally consume its public methods from an adapter instance; if you are building a new adapter, implement the protected abstract methods described below."}),"\n",(0,n.jsx)(r.h2,{id:"type-parameters",children:"Type parameters"}),"\n",(0,n.jsx)(r.pre,{children:(0,n.jsx)(r.code,{className:"language-ts",children:"class InversifyHttpAdapter<\n  TRequest,\n  TResponse,\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  TNextFunction extends (err?: any) => Promise<void> | void,\n  TResult,\n  TOptions extends HttpAdapterOptions = HttpAdapterOptions,\n>\n"})}),"\n",(0,n.jsxs)(r.ul,{children:["\n",(0,n.jsxs)(r.li,{children:["TRequest: Native request type from the underlying framework (e.g., ",(0,n.jsx)(r.code,{children:"express.Request"}),", ",(0,n.jsx)(r.code,{children:"FastifyRequest"}),", ",(0,n.jsx)(r.code,{children:"HonoRequest"}),")."]}),"\n",(0,n.jsxs)(r.li,{children:["TResponse: Native response type from the underlying framework (e.g., ",(0,n.jsx)(r.code,{children:"express.Response"}),", ",(0,n.jsx)(r.code,{children:"FastifyReply"}),", ",(0,n.jsx)(r.code,{children:"Context"}),")."]}),"\n",(0,n.jsx)(r.li,{children:"TNextFunction: Native \u201Cnext\u201D function type for chaining handlers."}),"\n",(0,n.jsx)(r.li,{children:"TResult: Adapter-specific return type for handlers and replies."}),"\n",(0,n.jsxs)(r.li,{children:["TOptions: Adapter options shape. Defaults to ",(0,n.jsx)(r.code,{children:"HttpAdapterOptions"}),"."]}),"\n"]}),"\n",(0,n.jsx)(r.h2,{id:"constructor",children:"Constructor"}),"\n",(0,n.jsx)(r.pre,{children:(0,n.jsx)(r.code,{className:"language-ts",children:"constructor(\n  container: Container,\n  defaultHttpAdapterOptions: RequiredOptions<TOptions>,\n  httpAdapterOptions: TOptions | undefined,\n  awaitableRequestMethodParamTypes?: Iterable<RequestMethodParameterType> | undefined,\n)\n"})}),"\n",(0,n.jsxs)(r.p,{children:["Creates an adapter instance bound to a DI container. Adapters typically invoke this from their subclass constructor and then expose a ",(0,n.jsx)(r.code,{children:"build()"})," method that prepares the server."]}),"\n",(0,n.jsxs)(r.ul,{children:["\n",(0,n.jsx)(r.li,{children:"container: The Inversify container that holds controllers, guards, pipes, middleware, interceptors, and filters."}),"\n",(0,n.jsxs)(r.li,{children:["defaultHttpAdapterOptions: The baseline options; merged with ",(0,n.jsx)(r.code,{children:"httpAdapterOptions"}),"."]}),"\n",(0,n.jsxs)(r.li,{children:["httpAdapterOptions: Optional overrides. If ",(0,n.jsx)(r.code,{children:"logger"})," is not ",(0,n.jsx)(r.code,{children:"false"}),", route mappings will be logged on build."]}),"\n",(0,n.jsxs)(r.li,{children:["awaitableRequestMethodParamTypes: Parameter types that should be awaited when building controller method arguments (e.g., when a parameter is resolved asynchronously). See parameter decorators under ",(0,n.jsx)(i.A,{to:"../../fundamentals/controller",children:"Controller"}),"."]}),"\n"]}),"\n",(0,n.jsx)(r.hr,{}),"\n",(0,n.jsx)(r.h2,{id:"public-methods",children:"Public methods"}),"\n",(0,n.jsx)(r.h3,{id:"applyglobalmiddleware",children:"applyGlobalMiddleware"}),"\n",(0,n.jsx)(r.pre,{children:(0,n.jsx)(r.code,{className:"language-ts",children:"applyGlobalMiddleware(\n  ...middlewareList: (Newable<Middleware> | ApplyMiddlewareOptions)[]\n): void\n"})}),"\n",(0,n.jsx)(r.p,{children:"Registers global middleware to run for every route."}),"\n",(0,n.jsxs)(r.ul,{children:["\n",(0,n.jsxs)(r.li,{children:["middlewareList: Either middleware classes or a structured object with ",(0,n.jsx)(r.code,{children:"preHandlerMiddlewareList"})," and ",(0,n.jsx)(r.code,{children:"postHandlerMiddlewareList"})," to control the phase. See ",(0,n.jsx)(i.A,{to:"../../fundamentals/middleware",children:"Middleware"}),"."]}),"\n"]}),"\n",(0,n.jsx)(r.p,{children:"Notes:"}),"\n",(0,n.jsxs)(r.ul,{children:["\n",(0,n.jsxs)(r.li,{children:["Must be called before the server is built; calling it after ",(0,n.jsx)(r.code,{children:"build()"})," throws an error."]}),"\n",(0,n.jsx)(r.li,{children:"Pre-handler middleware run before the controller handler (after guards); post-handler middleware run after the handler."}),"\n"]}),"\n",(0,n.jsx)(r.h3,{id:"useglobalfilters",children:"useGlobalFilters"}),"\n",(0,n.jsx)(r.pre,{children:(0,n.jsx)(r.code,{className:"language-ts",children:"useGlobalFilters(\n  ...errorFilterList: Newable<ErrorFilter>[]\n): void\n"})}),"\n",(0,n.jsxs)(r.p,{children:["Registers global error filters. When a handler, guard, pipe, middleware, or interceptor throws, the adapter looks up the most specific filter whose handled ",(0,n.jsx)(r.code,{children:"Error"})," type matches the thrown error (by walking the prototype chain), or a catch-all filter bound to ",(0,n.jsx)(r.code,{children:"null"})," if provided."]}),"\n",(0,n.jsxs)(r.ul,{children:["\n",(0,n.jsx)(r.li,{children:"errorFilterList: Error filter classes to register globally."}),"\n"]}),"\n",(0,n.jsx)(r.p,{children:"Behavior:"}),"\n",(0,n.jsxs)(r.ul,{children:["\n",(0,n.jsxs)(r.li,{children:["If no filter handles the error, an ",(0,n.jsx)(r.code,{children:"InternalServerError"})," response is produced unless the error itself is an ",(0,n.jsx)(r.code,{children:"ErrorHttpResponse"}),", which is sent as-is."]}),"\n"]}),"\n",(0,n.jsx)(r.h3,{id:"applyglobalguards",children:"applyGlobalGuards"}),"\n",(0,n.jsx)(r.pre,{children:(0,n.jsx)(r.code,{className:"language-ts",children:"applyGlobalGuards(\n  ...guardList: Newable<Guard<TRequest>>[]\n): void\n"})}),"\n",(0,n.jsxs)(r.p,{children:["Registers global guards that run before middleware and route handlers. See ",(0,n.jsx)(i.A,{to:"../../fundamentals/guard",children:"Guard"}),"."]}),"\n",(0,n.jsxs)(r.ul,{children:["\n",(0,n.jsx)(r.li,{children:"guardList: Guard classes to evaluate for every request."}),"\n"]}),"\n",(0,n.jsx)(r.p,{children:"Notes:"}),"\n",(0,n.jsxs)(r.ul,{children:["\n",(0,n.jsxs)(r.li,{children:["Must be called before the server is built; calling it after ",(0,n.jsx)(r.code,{children:"build()"})," throws an error."]}),"\n",(0,n.jsxs)(r.li,{children:["If any guard returns ",(0,n.jsx)(r.code,{children:"false"}),", a ",(0,n.jsx)(r.code,{children:"403 Forbidden"})," is returned (unless the guard throws a specific ",(0,n.jsx)(r.code,{children:"ErrorHttpResponse"}),")."]}),"\n"]}),"\n",(0,n.jsx)(r.h3,{id:"useglobalinterceptors",children:"useGlobalInterceptors"}),"\n",(0,n.jsx)(r.pre,{children:(0,n.jsx)(r.code,{className:"language-ts",children:"useGlobalInterceptors(\n  ...interceptorList: Newable<Interceptor<TRequest, TResponse>>[]\n): void\n"})}),"\n",(0,n.jsxs)(r.p,{children:["Registers global interceptors that wrap route execution. Interceptors can run logic before and after the handler and may transform the handler result. See ",(0,n.jsx)(i.A,{to:"../../fundamentals/interceptor",children:"Interceptor"}),"."]}),"\n",(0,n.jsxs)(r.ul,{children:["\n",(0,n.jsx)(r.li,{children:"interceptorList: Interceptor classes to apply globally."}),"\n"]}),"\n",(0,n.jsx)(r.p,{children:"Notes:"}),"\n",(0,n.jsxs)(r.ul,{children:["\n",(0,n.jsxs)(r.li,{children:["Must be called before the server is built; calling it after ",(0,n.jsx)(r.code,{children:"build()"})," throws an error."]}),"\n"]}),"\n",(0,n.jsx)(r.h3,{id:"useglobalpipe",children:"useGlobalPipe"}),"\n",(0,n.jsx)(r.pre,{children:(0,n.jsx)(r.code,{className:"language-ts",children:"useGlobalPipe(\n  ...pipeList: (Newable<Pipe> | Pipe)[]\n): void\n"})}),"\n",(0,n.jsxs)(r.p,{children:["Registers global pipes that transform/validate controller method parameters immediately after extraction. See ",(0,n.jsx)(i.A,{to:"../../fundamentals/pipe",children:"Pipe"}),"."]}),"\n",(0,n.jsxs)(r.ul,{children:["\n",(0,n.jsx)(r.li,{children:"pipeList: Pipe classes or instances. Instances are used as provided; classes are resolved from the container per request."}),"\n"]}),"\n",(0,n.jsx)(r.p,{children:"Order of execution:"}),"\n",(0,n.jsxs)(r.ul,{children:["\n",(0,n.jsxs)(r.li,{children:["Global pipes run before parameter-level pipes declared via parameter decorators (e.g., ",(0,n.jsx)(r.code,{children:"@Body(ParseNumberPipe)"}),")."]}),"\n"]}),"\n",(0,n.jsx)(r.h3,{id:"build",children:"build"}),"\n",(0,n.jsx)(r.pre,{children:(0,n.jsx)(r.code,{className:"language-ts",children:"build(): Promise<unknown>\n"})}),"\n",(0,n.jsx)(r.p,{children:"Abstract. Implemented by concrete adapters to build and return the underlying HTTP server or framework instance."})]})}function h(e={}){let{wrapper:r}={...(0,l.R)(),...e.components};return r?(0,n.jsx)(r,{...e,children:(0,n.jsx)(p,{...e})}):p(e)}}}]);