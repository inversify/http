"use strict";(self.webpackChunk_inversifyjs_inversify_http_docs_site=self.webpackChunk_inversifyjs_inversify_http_docs_site||[]).push([["269"],{9577:function(e,n,r){r.r(n),r.d(n,{frontMatter:()=>i,toc:()=>u,default:()=>x,metadata:()=>t,assets:()=>h,contentTitle:()=>c});var t=JSON.parse('{"id":"api/decorators","title":"Decorator","description":"This section covers Inversify HTTP decorators used to provide related metadata.","source":"@site/docs/api/decorators.mdx","sourceDirName":"api","slug":"/api/decorators","permalink":"/http/docs/api/decorators","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":1,"frontMatter":{"sidebar_position":1,"title":"Decorator"},"sidebar":"tutorialSidebar","previous":{"title":"Pipe","permalink":"/http/docs/fundamentals/pipe"}}'),s=r(4076),a=r(9221),l=r(7419),o=r(522),d=r(4216);let i={sidebar_position:1,title:"Decorator"},c="Decorators",h={},u=[{value:"HTTP Request lifecycle",id:"http-request-lifecycle",level:2},{value:"ApplyMiddleware",id:"applymiddleware",level:3},{value:"Example: apply middleware to a controller (all routes)",id:"example-apply-middleware-to-a-controller-all-routes",level:4},{value:"Example: apply middleware to a single route",id:"example-apply-middleware-to-a-single-route",level:4},{value:"UseGuard",id:"useguard",level:3},{value:"HTTP Request message abstraction",id:"http-request-message-abstraction",level:2},{value:"Body",id:"body",level:3},{value:"Example: reading a request body",id:"example-reading-a-request-body",level:4},{value:"Headers",id:"headers",level:3},{value:"Example: reading the User-Agent header",id:"example-reading-the-user-agent-header",level:4},{value:"Cookies",id:"cookies",level:3},{value:"Example: reading a session cookie",id:"example-reading-a-session-cookie",level:4},{value:"Request",id:"request",level:3},{value:"Example: accessing the native request per adapter",id:"example-accessing-the-native-request-per-adapter",level:4},{value:"HTTP Response message abstraction",id:"http-response-message-abstraction",level:2},{value:"Response",id:"response",level:3},{value:"Example: sending a response per adapter",id:"example-sending-a-response-per-adapter",level:4},{value:"SetHeader",id:"setheader",level:3},{value:"Example: Setting a response header",id:"example-setting-a-response-header",level:4},{value:"StatusCode",id:"statuscode",level:3},{value:"Example: Setting a response status code",id:"example-setting-a-response-status-code",level:4},{value:"HTTP methods",id:"http-methods",level:2},{value:"All",id:"all",level:3},{value:"Example: decorating a controller method",id:"example-decorating-a-controller-method",level:4},{value:"Delete",id:"delete",level:3},{value:"Example: decorating a controller method",id:"example-decorating-a-controller-method-1",level:4},{value:"Get",id:"get",level:3},{value:"Example: decorating a controller method",id:"example-decorating-a-controller-method-2",level:4},{value:"Head",id:"head",level:3},{value:"Example: decorating a controller method",id:"example-decorating-a-controller-method-3",level:4},{value:"Options",id:"options",level:3},{value:"Example: decorating a controller method",id:"example-decorating-a-controller-method-4",level:4},{value:"Patch",id:"patch",level:3},{value:"Example: decorating a controller method",id:"example-decorating-a-controller-method-5",level:4},{value:"Post",id:"post",level:3},{value:"Example: decorating a controller method",id:"example-decorating-a-controller-method-6",level:4},{value:"Put",id:"put",level:3},{value:"Example: decorating a controller method",id:"example-decorating-a-controller-method-7",level:4}];function p(e){let n={a:"a",admonition:"admonition",code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",header:"header",li:"li",p:"p",pre:"pre",ul:"ul",...(0,a.a)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.header,{children:(0,s.jsx)(n.h1,{id:"decorators",children:"Decorators"})}),"\n",(0,s.jsx)(n.p,{children:"This section covers Inversify HTTP decorators used to provide related metadata."}),"\n",(0,s.jsx)(n.h2,{id:"http-request-lifecycle",children:"HTTP Request lifecycle"}),"\n",(0,s.jsx)(n.p,{children:"Inversify HTTP decorators can be used to manage the lifecycle of HTTP requests, including middleware execution, request handling, and response generation. This allows for more modular and maintainable code."}),"\n",(0,s.jsx)(n.h3,{id:"applymiddleware",children:"ApplyMiddleware"}),"\n",(0,s.jsx)(n.p,{children:"Attaches middleware to a controller class (applies to all its routes) or to a specific route method."}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-ts",children:"ApplyMiddleware(\n  ...middlewareList: (Newable<Middleware> | ApplyMiddlewareOptions)[],\n): ClassDecorator & MethodDecorator\n"})}),"\n",(0,s.jsx)(n.p,{children:"Parameters"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["middlewareList","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"Newable<Middleware>"}),": One or more middleware classes. When passed directly, they run in the ",(0,s.jsx)(n.code,{children:"PreHandler"})," phase."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"ApplyMiddlewareOptions"}),": Object form to control the execution phase and group multiple middleware.","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["phase (",(0,s.jsx)(n.code,{children:"MiddlewarePhase"}),"): Either ",(0,s.jsx)(n.code,{children:"PreHandler"})," or ",(0,s.jsx)(n.code,{children:"PostHandler"}),"."]}),"\n",(0,s.jsxs)(n.li,{children:["middleware (",(0,s.jsx)(n.code,{children:"Newable<Middleware>"})," | ",(0,s.jsx)(n.code,{children:"Newable<Middleware>"}),"[]): One or many middleware classes."]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"Notes"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Scope: Place the decorator on the controller class to affect all routes, or on a method to affect only that route."}),"\n",(0,s.jsxs)(n.li,{children:["Phase: When passing middleware classes directly (not the options object), they run in the ",(0,s.jsx)(n.code,{children:"PreHandler"})," phase by default."]}),"\n",(0,s.jsx)(n.li,{children:"Order: Within the same phase, middleware execute in the order they are provided."}),"\n",(0,s.jsxs)(n.li,{children:["See also: ",(0,s.jsx)(n.a,{href:"../../fundamentals/middleware",children:"Middleware fundamentals"})," for adapter-specific request/response types and tips."]}),"\n"]}),"\n",(0,s.jsx)(n.h4,{id:"example-apply-middleware-to-a-controller-all-routes",children:"Example: apply middleware to a controller (all routes)"}),"\n",(0,s.jsx)(l.Z,{language:"ts",children:"@ApplyMiddleware(MyMiddleware)\n@Controller('/ping')\nclass PingController {\n  @Get()\n  public async get(): Promise<string> {\n    return 'pong';\n  }\n}"}),"\n",(0,s.jsx)(n.h4,{id:"example-apply-middleware-to-a-single-route",children:"Example: apply middleware to a single route"}),"\n",(0,s.jsx)(l.Z,{language:"ts",children:"@Controller('/ping')\nclass PingController {\n  @ApplyMiddleware(MyMiddleware)\n  @Get()\n  public async get(): Promise<string> {\n    return 'pong';\n  }\n}"}),"\n",(0,s.jsx)(n.h3,{id:"useguard",children:"UseGuard"}),"\n",(0,s.jsxs)(n.p,{children:["Attaches one or more ",(0,s.jsx)(n.a,{href:"../../fundamentals/guard",children:"guards"})," to a controller class or method. All guards must allow for the request to continue."]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-ts",children:"UseGuard(...guardList: Newable<Guard>[]): ClassDecorator & MethodDecorator\n"})}),"\n",(0,s.jsx)(n.p,{children:"Parameters"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["guardList: One or more guard classes implementing ",(0,s.jsx)(n.code,{children:"Guard<TRequest>"}),"."]}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"Notes"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Scope: Place on the controller class to affect all routes, or on a method to affect only that route."}),"\n",(0,s.jsxs)(n.li,{children:["Guard return values: ",(0,s.jsx)(n.code,{children:"activate()"})," may return ",(0,s.jsx)(n.code,{children:"true"})," (continue), ",(0,s.jsx)(n.code,{children:"false"})," (reply with ",(0,s.jsx)(n.code,{children:"403 Forbidden"}),"), or throw an ",(0,s.jsx)(n.code,{children:"ErrorHttpResponse"})," (replied as-is, e.g., ",(0,s.jsx)(n.code,{children:"throw new ForbiddenHttpResponse('message')"}),")."]}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"http-request-message-abstraction",children:"HTTP Request message abstraction"}),"\n",(0,s.jsx)(n.p,{children:"Inversify HTTP decorators can be used to abstract HTTP request details, such as headers, query parameters, and request bodies. This allows for cleaner controller code and better separation of concerns."}),"\n",(0,s.jsx)(n.h3,{id:"body",children:"Body"}),"\n",(0,s.jsx)(n.p,{children:"Reads the HTTP request body, or a specific property of it when a name is provided."}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-ts",children:"Body(parameterName?: string): ParameterDecorator\n"})}),"\n",(0,s.jsx)(n.p,{children:"Parameters"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"parameterName (optional string): When provided, extracts the named property from the body. When omitted, injects the entire body object."}),"\n"]}),"\n",(0,s.jsx)(n.h4,{id:"example-reading-a-request-body",children:"Example: reading a request body"}),"\n",(0,s.jsx)(l.Z,{language:"ts",children:"@Controller('/messages')\nexport class BodyController {\n  @Post()\n  public async createMessage(@Body() body: BodyPayload): Promise<BodyResult> {\n    return {\n      message: body.message,\n    };\n  }\n}\n"}),"\n",(0,s.jsx)(n.h3,{id:"headers",children:"Headers"}),"\n",(0,s.jsx)(n.p,{children:"Reads HTTP request headers, or a specific header when a name is provided."}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-ts",children:"Headers(name?: string): ParameterDecorator\n"})}),"\n",(0,s.jsx)(n.p,{children:"Parameters"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"name (optional string): Header name to extract. When omitted, injects all headers as an object. Header names are case-insensitive."}),"\n"]}),"\n",(0,s.jsx)(n.h4,{id:"example-reading-the-user-agent-header",children:"Example: reading the User-Agent header"}),"\n",(0,s.jsx)(l.Z,{language:"ts",children:"@Controller('/headers')\nexport class HeadersController {\n  @Get()\n  public async getUserAgent(\n    @Headers('x-client') userAgent: string | undefined,\n  ): Promise<HeadersResult> {\n    return {\n      agent: userAgent,\n    };\n  }\n}\n"}),"\n",(0,s.jsx)(n.h3,{id:"cookies",children:"Cookies"}),"\n",(0,s.jsx)(n.p,{children:"Reads HTTP cookies, or a specific cookie when a name is provided."}),"\n",(0,s.jsx)(n.admonition,{type:"warning",children:(0,s.jsxs)(n.p,{children:["Remember to enable ",(0,s.jsx)(n.code,{children:"useCookies"})," option when using ",(0,s.jsx)(n.code,{children:"express"})," or ",(0,s.jsx)(n.code,{children:"fastify"})," adapters."]})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-ts",children:"Cookies(name?: string): ParameterDecorator\n"})}),"\n",(0,s.jsx)(n.p,{children:"Parameters"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"name (optional string): Cookie name to extract. When omitted, injects a key-value map of all cookies."}),"\n"]}),"\n",(0,s.jsx)(n.h4,{id:"example-reading-a-session-cookie",children:"Example: reading a session cookie"}),"\n",(0,s.jsx)(l.Z,{language:"ts",children:"@Controller('/cookies')\nexport class CookiesController {\n  @Get()\n  public async getCookie(\n    @Cookies('sessionId') sessionId: string | undefined,\n  ): Promise<CookiesResult> {\n    return {\n      sessionId,\n    };\n  }\n}\n"}),"\n",(0,s.jsx)(n.h3,{id:"request",children:"Request"}),"\n",(0,s.jsx)(n.p,{children:"Retrieves the native request object of the current adapter. Useful when you need full access to the underlying framework request."}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-ts",children:"Request(...pipeList: (Newable<Pipe> | Pipe)[]): ParameterDecorator\n"})}),"\n",(0,s.jsx)(n.p,{children:"Notes"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Type-safe: Type the parameter with the adapter's request type for intellisense and safety."}),"\n",(0,s.jsx)(n.li,{children:"Pipes: You can attach pipes to the parameter if you need to transform or validate it."}),"\n"]}),"\n",(0,s.jsx)(n.h4,{id:"example-accessing-the-native-request-per-adapter",children:"Example: accessing the native request per adapter"}),"\n",(0,s.jsxs)(o.Z,{children:[(0,s.jsx)(d.Z,{value:"express4",label:"Express 4",children:(0,s.jsx)(l.Z,{language:"ts",children:"@Controller('/headers')\nexport class RequestExpressController {\n  @Get()\n  public async readHeader(\n    @Request() request: express.Request,\n  ): Promise<string> {\n    const value: string | string[] | undefined =\n      request.headers['x-test-header'];\n\n    let parsedValue: string;\n\n    if (Array.isArray(value)) {\n      if (value.length !== 1) {\n        throw new BadRequestHttpResponse(\n          'Expected a single `x-test-header` value',\n        );\n      }\n\n      [parsedValue] = value as [string];\n    } else {\n      parsedValue = value ?? '';\n    }\n\n    return parsedValue;\n  }\n}\n"})}),(0,s.jsx)(d.Z,{value:"express5",label:"Express 5",children:(0,s.jsx)(l.Z,{language:"ts",children:"@Controller('/headers')\nexport class RequestExpressController {\n  @Get()\n  public async readHeader(\n    @Request() request: express.Request,\n  ): Promise<string> {\n    const value: string | string[] | undefined =\n      request.headers['x-test-header'];\n\n    let parsedValue: string;\n\n    if (Array.isArray(value)) {\n      if (value.length !== 1) {\n        throw new BadRequestHttpResponse(\n          'Expected a single `x-test-header` value',\n        );\n      }\n\n      [parsedValue] = value as [string];\n    } else {\n      parsedValue = value ?? '';\n    }\n\n    return parsedValue;\n  }\n}\n"})}),(0,s.jsx)(d.Z,{value:"fastify",label:"Fastify",children:(0,s.jsx)(l.Z,{language:"ts",children:"@Controller('/headers')\nexport class RequestFastifyController {\n  @Get()\n  public async readHeader(@Request() request: FastifyRequest): Promise<string> {\n    const value: string | string[] | undefined =\n      request.headers['x-test-header'];\n\n    let parsedValue: string;\n\n    if (Array.isArray(value)) {\n      if (value.length !== 1) {\n        throw new BadRequestHttpResponse(\n          'Expected a single `x-test-header` value',\n        );\n      }\n\n      [parsedValue] = value as [string];\n    } else {\n      parsedValue = value ?? '';\n    }\n\n    return parsedValue;\n  }\n}\n"})}),(0,s.jsx)(d.Z,{value:"hono",label:"Hono",children:(0,s.jsx)(l.Z,{language:"ts",children:"@Controller('/headers')\nexport class RequestHonoController {\n  @Get()\n  public async readHeader(@Request() request: HonoRequest): Promise<string> {\n    const value: string | undefined = request.header('x-test-header');\n\n    return value ?? '';\n  }\n}\n"})})]}),"\n",(0,s.jsx)(n.h2,{id:"http-response-message-abstraction",children:"HTTP Response message abstraction"}),"\n",(0,s.jsx)(n.p,{children:"Inversify HTTP decorators can also be used to abstract HTTP response details, such as status codes and headers. This allows for more consistent and maintainable response handling across controllers."}),"\n",(0,s.jsx)(n.h3,{id:"response",children:"Response"}),"\n",(0,s.jsx)(n.p,{children:"Injects the native response object of the current adapter. Use it when you want to write directly to the underlying framework response."}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-ts",children:"Response(...pipeList: (Newable<Pipe> | Pipe)[]): ParameterDecorator\n"})}),"\n",(0,s.jsx)(n.p,{children:"Notes"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Type-safe: Type the parameter with the adapter's response type for intellisense and safety."}),"\n",(0,s.jsxs)(n.li,{children:["Return type: When you write to the native response, prefer a return type of ",(0,s.jsx)(n.code,{children:"void"}),". For Hono, return the ",(0,s.jsx)(n.code,{children:"Response"})," produced by the ",(0,s.jsx)(n.code,{children:"Context"}),"."]}),"\n",(0,s.jsxs)(n.li,{children:["Hono: Prefer using ",(0,s.jsx)(n.code,{children:"@Context()"})," from ",(0,s.jsx)(n.code,{children:"@inversifyjs/http-hono"})," to access Hono's ",(0,s.jsx)(n.code,{children:"Context"})," object."]}),"\n"]}),"\n",(0,s.jsx)(n.h4,{id:"example-sending-a-response-per-adapter",children:"Example: sending a response per adapter"}),"\n",(0,s.jsxs)(o.Z,{children:[(0,s.jsx)(d.Z,{value:"express4",label:"Express 4",children:(0,s.jsx)(l.Z,{language:"ts",children:"@Controller('/message')\nexport class ResponseExpressController {\n  @Get()\n  public async sendMessage(\n    @Response() response: express.Response,\n  ): Promise<void> {\n    response.send({ message: 'hello' });\n  }\n}\n"})}),(0,s.jsx)(d.Z,{value:"express5",label:"Express 5",children:(0,s.jsx)(l.Z,{language:"ts",children:"@Controller('/message')\nexport class ResponseExpressController {\n  @Get()\n  public async sendMessage(\n    @Response() response: express.Response,\n  ): Promise<void> {\n    response.send({ message: 'hello' });\n  }\n}\n"})}),(0,s.jsx)(d.Z,{value:"fastify",label:"Fastify",children:(0,s.jsx)(l.Z,{language:"ts",children:"@Controller('/message')\nexport class ResponseFastifyController {\n  @Get()\n  public async sendMessage(@Response() reply: FastifyReply): Promise<void> {\n    reply.send({ message: 'hello' });\n  }\n}\n"})}),(0,s.jsxs)(d.Z,{value:"hono",label:"Hono",children:[(0,s.jsx)(n.admonition,{title:"Context decorator",type:"info",children:(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"@inversifyjs/http-hono"})," provides the ",(0,s.jsx)(n.code,{children:"@Context()"})," decorator to access the ",(0,s.jsx)(n.code,{children:"Context"})," object."]})}),(0,s.jsx)(l.Z,{language:"ts",children:"import { Controller, Get } from '@inversifyjs/http-core';\nimport { Context } from '@inversifyjs/http-hono';\nimport { Context as HonoContext } from 'hono';\n\n@Controller('/message')\nexport class ResponseHonoController {\n  @Get()\n  public async sendMessage(@Context() context: HonoContext): Promise<Response> {\n    return context.json({ message: 'hello' });\n  }\n}\n"})]})]}),"\n",(0,s.jsx)(n.h3,{id:"setheader",children:"SetHeader"}),"\n",(0,s.jsx)(n.p,{children:"Sets a HTTP response header."}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-ts",children:"SetHeader(headerKey: string, value: string): MethodDecorator\n"})}),"\n",(0,s.jsx)(n.p,{children:"Parameters"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"headerKey (string): Name of the header to be set."}),"\n",(0,s.jsx)(n.li,{children:"value (string): Value of the header to be set."}),"\n"]}),"\n",(0,s.jsx)(n.h4,{id:"example-setting-a-response-header",children:"Example: Setting a response header"}),"\n",(0,s.jsx)(l.Z,{language:"ts",children:"@Controller('/messages')\nexport class ContentController {\n  @Post()\n  @SetHeader('custom-content-header', 'sample')\n  public async createMessage(@Body() body: BodyPayload): Promise<BodyResult> {\n    return {\n      message: body.message,\n    };\n  }\n}\n"}),"\n",(0,s.jsx)(n.h3,{id:"statuscode",children:"StatusCode"}),"\n",(0,s.jsx)(n.p,{children:"Sets the HTTP response status code."}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-ts",children:"StatusCode(statusCode: HttpStatusCode): MethodDecorator\n"})}),"\n",(0,s.jsx)(n.p,{children:"Parameters"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"headerKey (HttpStatusCode): Status code to be set."}),"\n"]}),"\n",(0,s.jsx)(n.h4,{id:"example-setting-a-response-status-code",children:"Example: Setting a response status code"}),"\n",(0,s.jsx)(l.Z,{language:"ts",children:"@Controller('/messages')\nexport class ContentController {\n  @Post()\n  @StatusCode(HttpStatusCode.CREATED)\n  public async createMessage(@Body() body: BodyPayload): Promise<BodyResult> {\n    return {\n      message: body.message,\n    };\n  }\n}\n"}),"\n",(0,s.jsx)(n.h2,{id:"http-methods",children:"HTTP methods"}),"\n",(0,s.jsx)(n.h3,{id:"all",children:"All"}),"\n",(0,s.jsx)(n.p,{children:"Sets up a route for all HTTP methods."}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-ts",children:"All(path?: string): MethodDecorator\n"})}),"\n",(0,s.jsx)(n.p,{children:"Parameters"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["path (optional string): Route path mounted under the controller's base path. Defaults to ",(0,s.jsx)(n.code,{children:"'/'"}),". It binds the method to all HTTP methods for the given path."]}),"\n"]}),"\n",(0,s.jsx)(n.h4,{id:"example-decorating-a-controller-method",children:"Example: decorating a controller method"}),"\n",(0,s.jsx)(l.Z,{language:"ts",children:"@Controller('/content')\nexport class ContentController {\n  @All()\n  public async allContent(): Promise<void> {}\n}\n"}),"\n",(0,s.jsx)(n.h3,{id:"delete",children:"Delete"}),"\n",(0,s.jsx)(n.p,{children:"Sets up a route for DELETE requests."}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-ts",children:"Delete(path?: string): MethodDecorator\n"})}),"\n",(0,s.jsx)(n.p,{children:"Parameters"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["path (optional string): Route path mounted under the controller's base path. Defaults to ",(0,s.jsx)(n.code,{children:"'/'"}),". Example: ",(0,s.jsx)(n.code,{children:"@Delete('/remove')"})," maps to ",(0,s.jsx)(n.code,{children:"DELETE <controllerPath>/remove"}),"."]}),"\n"]}),"\n",(0,s.jsx)(n.h4,{id:"example-decorating-a-controller-method-1",children:"Example: decorating a controller method"}),"\n",(0,s.jsx)(l.Z,{language:"ts",children:"@Controller('/content')\nexport class ContentController {\n  @Delete()\n  public async deleteContent(\n    @Query() queryParams: { content: string },\n  ): Promise<Content> {\n    return {\n      content: queryParams.content,\n    };\n  }\n}\n"}),"\n",(0,s.jsx)(n.h3,{id:"get",children:"Get"}),"\n",(0,s.jsx)(n.p,{children:"Sets up a route for GET requests."}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-ts",children:"Get(path?: string): MethodDecorator\n"})}),"\n",(0,s.jsx)(n.p,{children:"Parameters"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["path (optional string): Route path mounted under the controller's base path. Defaults to ",(0,s.jsx)(n.code,{children:"'/'"}),". Example: ",(0,s.jsx)(n.code,{children:"@Get('/list')"})," maps to ",(0,s.jsx)(n.code,{children:"GET <controllerPath>/list"}),". When omitted, the method is bound to the controller path itself."]}),"\n"]}),"\n",(0,s.jsx)(n.h4,{id:"example-decorating-a-controller-method-2",children:"Example: decorating a controller method"}),"\n",(0,s.jsx)(l.Z,{language:"ts",children:"@Controller('/content')\nexport class ContentController {\n  @Get()\n  public async getContent(\n    @Query() queryParams: { content: string },\n  ): Promise<Content> {\n    return {\n      content: queryParams.content,\n    };\n  }\n}\n"}),"\n",(0,s.jsx)(n.h3,{id:"head",children:"Head"}),"\n",(0,s.jsx)(n.p,{children:"Sets up a route for HEAD requests."}),"\n",(0,s.jsx)(n.admonition,{type:"warning",children:(0,s.jsxs)(n.p,{children:["Since ",(0,s.jsx)(n.code,{children:"hono@4"}),", HEAD routes are no longer allowed, use ",(0,s.jsx)(n.code,{children:"@Get"})," routes instead if you rely on the Hono adapter."]})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-ts",children:"Head(path?: string): MethodDecorator\n"})}),"\n",(0,s.jsx)(n.p,{children:"Parameters"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["path (optional string): Route path mounted under the controller's base path. Defaults to ",(0,s.jsx)(n.code,{children:"'/'"}),". Example: ",(0,s.jsx)(n.code,{children:"@Head('/')"})," maps to ",(0,s.jsx)(n.code,{children:"HEAD <controllerPath>"}),"."]}),"\n"]}),"\n",(0,s.jsx)(n.h4,{id:"example-decorating-a-controller-method-3",children:"Example: decorating a controller method"}),"\n",(0,s.jsx)(l.Z,{language:"ts",children:"@Controller('/content')\nexport class ContentController {\n  @Head()\n  @SetHeader('custom-content-header', 'sample')\n  public async headContent(): Promise<undefined> {\n    return undefined;\n  }\n}\n"}),"\n",(0,s.jsx)(n.h3,{id:"options",children:"Options"}),"\n",(0,s.jsx)(n.p,{children:"Sets up a route for OPTIONS requests."}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-ts",children:"Options(path?: string): MethodDecorator\n"})}),"\n",(0,s.jsx)(n.p,{children:"Parameters"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["path (optional string): Route path mounted under the controller's base path. Defaults to ",(0,s.jsx)(n.code,{children:"'/'"}),". Example: ",(0,s.jsx)(n.code,{children:"@Options('/')"})," maps to ",(0,s.jsx)(n.code,{children:"OPTIONS <controllerPath>"}),"."]}),"\n"]}),"\n",(0,s.jsx)(n.h4,{id:"example-decorating-a-controller-method-4",children:"Example: decorating a controller method"}),"\n",(0,s.jsx)(l.Z,{language:"ts",children:"@Controller('/content')\nexport class ContentController {\n  @Options()\n  public async optionsContent(): Promise<undefined> {\n    return undefined;\n  }\n}\n"}),"\n",(0,s.jsx)(n.h3,{id:"patch",children:"Patch"}),"\n",(0,s.jsx)(n.p,{children:"Sets up a route for PATCH requests."}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-ts",children:"Patch(path?: string): MethodDecorator\n"})}),"\n",(0,s.jsx)(n.p,{children:"Parameters"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["path (optional string): Route path mounted under the controller's base path. Defaults to ",(0,s.jsx)(n.code,{children:"'/'"}),". Example: ",(0,s.jsx)(n.code,{children:"@Patch('/partial')"})," maps to ",(0,s.jsx)(n.code,{children:"PATCH <controllerPath>/partial"}),"."]}),"\n"]}),"\n",(0,s.jsx)(n.h4,{id:"example-decorating-a-controller-method-5",children:"Example: decorating a controller method"}),"\n",(0,s.jsx)(l.Z,{language:"ts",children:"@Controller('/content')\nexport class ContentController {\n  @Patch()\n  public async patchContent(\n    @Body() body: { content: string },\n  ): Promise<Content> {\n    return {\n      content: body.content,\n    };\n  }\n}\n"}),"\n",(0,s.jsx)(n.h3,{id:"post",children:"Post"}),"\n",(0,s.jsx)(n.p,{children:"Sets up a route for POST requests."}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-ts",children:"Post(path?: string): MethodDecorator\n"})}),"\n",(0,s.jsx)(n.p,{children:"Parameters"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["path (optional string): Route path mounted under the controller's base path. Defaults to ",(0,s.jsx)(n.code,{children:"'/'"}),". Example: ",(0,s.jsx)(n.code,{children:"@Post('/create')"})," maps to ",(0,s.jsx)(n.code,{children:"POST <controllerPath>/create"}),"."]}),"\n"]}),"\n",(0,s.jsx)(n.h4,{id:"example-decorating-a-controller-method-6",children:"Example: decorating a controller method"}),"\n",(0,s.jsx)(l.Z,{language:"ts",children:"@Controller('/content')\nexport class ContentController {\n  @Post()\n  public async createContent(\n    @Body() body: { content: string },\n  ): Promise<Content> {\n    return {\n      content: body.content,\n    };\n  }\n}\n"}),"\n",(0,s.jsx)(n.h3,{id:"put",children:"Put"}),"\n",(0,s.jsx)(n.p,{children:"Sets up a route for PUT requests."}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-ts",children:"Put(path?: string): MethodDecorator\n"})}),"\n",(0,s.jsx)(n.p,{children:"Parameters"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"path (optional string): Route path mounted under the controller's base path. Defaults to '/'. Example: @Put('/update') maps to PUT <controllerPath>/update."}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"Notes"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Use @Body to read the request payload for PUT."}),"\n"]}),"\n",(0,s.jsx)(n.h4,{id:"example-decorating-a-controller-method-7",children:"Example: decorating a controller method"}),"\n",(0,s.jsx)(l.Z,{language:"ts",children:"@Controller('/content')\nexport class ContentController {\n  @Put()\n  public async updateContent(\n    @Body() body: { content: string },\n  ): Promise<Content> {\n    return {\n      content: body.content,\n    };\n  }\n}\n"})]})}function x(e={}){let{wrapper:n}={...(0,a.a)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(p,{...e})}):p(e)}},4216:function(e,n,r){r.d(n,{Z:()=>a});var t=r(4076);r(466);var s=r(2626);function a({children:e,hidden:n,className:r}){return(0,t.jsx)("div",{role:"tabpanel",className:(0,s.Z)("tabItem__4E6",r),hidden:n,children:e})}},522:function(e,n,r){r.d(n,{Z:()=>v});var t=r(4076),s=r(466),a=r(2626),l=r(603),o=r(4224),d=r(4207),i=r(5005),c=r(7848),h=r(8606);function u(e){return s.Children.toArray(e).filter(e=>"\n"!==e).map(e=>{if(!e||(0,s.isValidElement)(e)&&function(e){let{props:n}=e;return!!n&&"object"==typeof n&&"value"in n}(e))return e;throw Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)})?.filter(Boolean)??[]}function p({value:e,tabValues:n}){return n.some(n=>n.value===e)}var x=r(660);function m({className:e,block:n,selectedValue:r,selectValue:s,tabValues:o}){let d=[],{blockElementScrollPositionUntilNextRender:i}=(0,l.o5)(),c=e=>{let n=e.currentTarget,t=o[d.indexOf(n)].value;t!==r&&(i(n),s(t))},h=e=>{let n=null;switch(e.key){case"Enter":c(e);break;case"ArrowRight":{let r=d.indexOf(e.currentTarget)+1;n=d[r]??d[0];break}case"ArrowLeft":{let r=d.indexOf(e.currentTarget)-1;n=d[r]??d[d.length-1]}}n?.focus()};return(0,t.jsx)("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,a.Z)("tabs",{"tabs--block":n},e),children:o.map(({value:e,label:n,attributes:s})=>(0,t.jsx)("li",{role:"tab",tabIndex:r===e?0:-1,"aria-selected":r===e,ref:e=>{d.push(e)},onKeyDown:h,onClick:c,...s,className:(0,a.Z)("tabs__item","tabItem_MDva",s?.className,{"tabs__item--active":r===e}),children:n??e},e))})}function g({lazy:e,children:n,selectedValue:r}){let l=(Array.isArray(n)?n:[n]).filter(Boolean);if(e){let e=l.find(e=>e.props.value===r);return e?(0,s.cloneElement)(e,{className:(0,a.Z)("margin-top--md",e.props.className)}):null}return(0,t.jsx)("div",{className:"margin-top--md",children:l.map((e,n)=>(0,s.cloneElement)(e,{key:n,hidden:e.props.value!==r}))})}function j(e){let n=function(e){let{defaultValue:n,queryString:r=!1,groupId:t}=e,a=function(e){let{values:n,children:r}=e;return(0,s.useMemo)(()=>{let e=n??u(r).map(({props:{value:e,label:n,attributes:r,default:t}})=>({value:e,label:n,attributes:r,default:t})),t=(0,c.lx)(e,(e,n)=>e.value===n.value);if(t.length>0)throw Error(`Docusaurus error: Duplicate values "${t.map(e=>e.value).join(", ")}" found in <Tabs>. Every value needs to be unique.`);return e},[n,r])}(e),[l,x]=(0,s.useState)(()=>(function({defaultValue:e,tabValues:n}){if(0===n.length)throw Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(e){if(!p({value:e,tabValues:n}))throw Error(`Docusaurus error: The <Tabs> has a defaultValue "${e}" but none of its children has the corresponding value. Available values are: ${n.map(e=>e.value).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return e}let r=n.find(e=>e.default)??n[0];if(!r)throw Error("Unexpected error: 0 tabValues");return r.value})({defaultValue:n,tabValues:a})),[m,g]=function({queryString:e=!1,groupId:n}){let r=(0,o.k6)(),t=function({queryString:e=!1,groupId:n}){if("string"==typeof e)return e;if(!1===e)return null;if(!0===e&&!n)throw Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return n??null}({queryString:e,groupId:n});return[(0,i._X)(t),(0,s.useCallback)(e=>{if(!t)return;let n=new URLSearchParams(r.location.search);n.set(t,e),r.replace({...r.location,search:n.toString()})},[t,r])]}({queryString:r,groupId:t}),[j,v]=function({groupId:e}){let n=e?`docusaurus.tab.${e}`:null,[r,t]=(0,h.Nk)(n);return[r,(0,s.useCallback)(e=>{n&&t.set(e)},[n,t])]}({groupId:t}),f=(()=>{let e=m??j;return p({value:e,tabValues:a})?e:null})();return(0,d.Z)(()=>{f&&x(f)},[f]),{selectedValue:l,selectValue:(0,s.useCallback)(e=>{if(!p({value:e,tabValues:a}))throw Error(`Can't select invalid tab value=${e}`);x(e),g(e),v(e)},[g,v,a]),tabValues:a}}(e);return(0,t.jsxs)("div",{className:(0,a.Z)("tabs-container","tabList_X4Uf"),children:[(0,t.jsx)(m,{...n,...e}),(0,t.jsx)(g,{...n,...e})]})}function v(e){let n=(0,x.Z)();return(0,t.jsx)(j,{...e,children:u(e.children)},String(n))}}}]);