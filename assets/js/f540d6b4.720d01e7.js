"use strict";(self.webpackChunk_inversifyjs_inversify_http_docs_site=self.webpackChunk_inversifyjs_inversify_http_docs_site||[]).push([["297"],{4256:function(e,t,n){n.r(t),n.d(t,{frontMatter:()=>c,toc:()=>d,default:()=>f,metadata:()=>r,assets:()=>p,contentTitle:()=>u});var r=JSON.parse('{"id":"fundamentals/interceptor","title":"Interceptor","description":"Interceptors run around your route handler\u2014before it executes and after it completes. They can inspect the request/response, short-circuit the flow, and even transform the handler result.","source":"@site/docs/fundamentals/interceptor.mdx","sourceDirName":"fundamentals","slug":"/fundamentals/interceptor","permalink":"/http/docs/fundamentals/interceptor","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":4,"frontMatter":{"sidebar_position":4,"title":"Interceptor"},"sidebar":"tutorialSidebar","previous":{"title":"Guard","permalink":"/http/docs/fundamentals/guard"},"next":{"title":"Middleware","permalink":"/http/docs/fundamentals/middleware"}}'),s=n(9970),a=n(7245),i=n(445),o=n(3160),l=n(9218);let c={sidebar_position:4,title:"Interceptor"},u="Interceptor",p={},d=[{value:"intercept",id:"intercept",level:2},{value:"Adapter-specific examples",id:"adapter-specific-examples",level:2},{value:"Transforming the handler result",id:"transforming-the-handler-result",level:2},{value:"Attaching interceptors",id:"attaching-interceptors",level:2}];function h(e){let t={a:"a",code:"code",h1:"h1",h2:"h2",header:"header",li:"li",p:"p",pre:"pre",ul:"ul",...(0,a.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(t.header,{children:(0,s.jsx)(t.h1,{id:"interceptor",children:"Interceptor"})}),"\n",(0,s.jsx)(t.p,{children:"Interceptors run around your route handler\u2014before it executes and after it completes. They can inspect the request/response, short-circuit the flow, and even transform the handler result."}),"\n",(0,s.jsxs)(t.p,{children:["Interceptors must implement the ",(0,s.jsx)(t.code,{children:"Interceptor<TRequest, TResponse>"})," interface:"]}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-ts",children:"interface Interceptor<TRequest = any, TResponse = any> {\n  intercept(\n    request: TRequest,\n    response: TResponse,\n    next: () => Promise<InterceptorTransformObject>,\n  ): Promise<void>;\n}\n\ninterface InterceptorTransformObject {\n  push: (transform: (value: unknown) => unknown) => void;\n}\n"})}),"\n",(0,s.jsx)(t.h2,{id:"intercept",children:"intercept"}),"\n",(0,s.jsxs)(t.ul,{children:["\n",(0,s.jsx)(t.li,{children:"Before the handler: do any pre-work (metrics, logging, auth checks, etc.)."}),"\n",(0,s.jsxs)(t.li,{children:["Call ",(0,s.jsx)(t.code,{children:"await next()"})," to hand control to the next interceptor or the controller handler."]}),"\n",(0,s.jsx)(t.li,{children:"After the handler: continue work (timers, audit logs, publish events, etc.)."}),"\n",(0,s.jsxs)(t.li,{children:["To modify the handler return value, use the returned ",(0,s.jsx)(t.code,{children:"InterceptorTransformObject"})," and call ",(0,s.jsx)(t.code,{children:"transform.push(fn)"}),"; your ",(0,s.jsx)(t.code,{children:"fn"})," receives the handler result and should return the transformed value."]}),"\n"]}),"\n",(0,s.jsx)(t.h2,{id:"adapter-specific-examples",children:"Adapter-specific examples"}),"\n",(0,s.jsx)(t.p,{children:"Each adapter exposes its own native request/response types. Below is a simple \u201Cmetrics\u201D interceptor that increments a counter for the request path, running both before and after the handler."}),"\n",(0,s.jsxs)(o.A,{children:[(0,s.jsx)(l.A,{value:"express4",label:"Express 4",children:(0,s.jsx)(i.A,{language:"ts",children:"const METRICS: Record<string, number> = {};\n\nfunction registerMetrics(path: string): void {\n  METRICS[path] = (METRICS[path] ?? 0) + 1;\n}\n\nexport class Express4MetricsInterceptor\n  implements Interceptor<Request, Response>\n{\n  public async intercept(\n    request: Request,\n    _response: Response,\n    next: () => Promise<unknown>,\n  ): Promise<void> {\n    const path: string = request.path;\n\n    // before handler\n    registerMetrics(path);\n\n    await next();\n\n    // after handler\n    registerMetrics(path);\n  }\n}"})}),(0,s.jsx)(l.A,{value:"express5",label:"Express 5",children:(0,s.jsx)(i.A,{language:"ts",children:"const METRICS: Record<string, number> = {};\n\nfunction registerMetrics(path: string): void {\n  METRICS[path] = (METRICS[path] ?? 0) + 1;\n}\n\nexport class ExpressMetricsInterceptor\n  implements Interceptor<Request, Response>\n{\n  public async intercept(\n    request: Request,\n    _response: Response,\n    next: () => Promise<unknown>,\n  ): Promise<void> {\n    const path: string = request.path;\n\n    // before handler\n    registerMetrics(path);\n\n    await next();\n\n    // after handler\n    registerMetrics(path);\n  }\n}"})}),(0,s.jsx)(l.A,{value:"fastify",label:"Fastify",children:(0,s.jsx)(i.A,{language:"ts",children:"const METRICS: Record<string, number> = {};\n\nfunction registerMetrics(path: string): void {\n  METRICS[path] = (METRICS[path] ?? 0) + 1;\n}\n\nexport class FastifyMetricsInterceptor\n  implements Interceptor<FastifyRequest, FastifyReply>\n{\n  public async intercept(\n    request: FastifyRequest,\n    _reply: FastifyReply,\n    next: () => Promise<unknown>,\n  ): Promise<void> {\n    const path: string = request.routeOptions.url ?? '/';\n\n    // before handler\n    registerMetrics(path);\n\n    await next();\n\n    // after handler\n    registerMetrics(path);\n  }\n}"})}),(0,s.jsx)(l.A,{value:"hono",label:"Hono",children:(0,s.jsx)(i.A,{language:"ts",children:"const METRICS: Record<string, number> = {};\n\nfunction registerMetrics(path: string): void {\n  METRICS[path] = (METRICS[path] ?? 0) + 1;\n}\n\nexport class HonoMetricsInterceptor\n  implements Interceptor<HonoRequest, Context>\n{\n  public async intercept(\n    request: HonoRequest,\n    _context: Context,\n    next: () => Promise<unknown>,\n  ): Promise<void> {\n    const path: string = request.path;\n\n    // before handler\n    registerMetrics(path);\n\n    await next();\n\n    // after handler\n    registerMetrics(path);\n  }\n}"})})]}),"\n",(0,s.jsx)(t.h2,{id:"transforming-the-handler-result",children:"Transforming the handler result"}),"\n",(0,s.jsxs)(t.p,{children:["Interceptors can transform the value returned by your controller method. After ",(0,s.jsx)(t.code,{children:"await next()"}),", use the returned transform object:"]}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-ts",children:"transform.push((value) => ({ ...value, intercepted: true }));\n"})}),"\n",(0,s.jsx)(t.p,{children:"Under the hood, the adapter chains all registered transforms and applies them to the handler result before sending the response."}),"\n",(0,s.jsx)(t.h2,{id:"attaching-interceptors",children:"Attaching interceptors"}),"\n",(0,s.jsxs)(t.p,{children:["Use the ",(0,s.jsx)(t.a,{href:"../../api/decorators#useinterceptor",children:"UseInterceptor"})," decorator at the controller level (applies to all routes) or at the method level (applies to a single route)."]}),"\n",(0,s.jsxs)(t.p,{children:["Global interceptors can be registered using the ",(0,s.jsx)(t.a,{href:"../../api/inversify-http-adapter#useglobalinterceptors",children:"InversifyHttpAdapter"}),"."]})]})}function f(e={}){let{wrapper:t}={...(0,a.R)(),...e.components};return t?(0,s.jsx)(t,{...e,children:(0,s.jsx)(h,{...e})}):h(e)}},9218:function(e,t,n){n.d(t,{A:()=>a});var r=n(9970);n(2714);var s=n(929);function a({children:e,hidden:t,className:n}){return(0,r.jsx)("div",{role:"tabpanel",className:(0,s.A)("tabItem_hNGx",n),hidden:t,children:e})}},3160:function(e,t,n){n.d(t,{A:()=>g});var r=n(9970),s=n(2714),a=n(929),i=n(9679),o=n(5455),l=n(2328),c=n(4448),u=n(6961),p=n(6656);function d(e){return s.Children.toArray(e).filter(e=>"\n"!==e).map(e=>{if(!e||(0,s.isValidElement)(e)&&function(e){let{props:t}=e;return!!t&&"object"==typeof t&&"value"in t}(e))return e;throw Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)})?.filter(Boolean)??[]}function h({value:e,tabValues:t}){return t.some(t=>t.value===e)}var f=n(5636);function m({className:e,block:t,selectedValue:n,selectValue:s,tabValues:o}){let l=[],{blockElementScrollPositionUntilNextRender:c}=(0,i.a_)(),u=e=>{let t=e.currentTarget,r=o[l.indexOf(t)].value;r!==n&&(c(t),s(r))},p=e=>{let t=null;switch(e.key){case"Enter":u(e);break;case"ArrowRight":{let n=l.indexOf(e.currentTarget)+1;t=l[n]??l[0];break}case"ArrowLeft":{let n=l.indexOf(e.currentTarget)-1;t=l[n]??l[l.length-1]}}t?.focus()};return(0,r.jsx)("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,a.A)("tabs",{"tabs--block":t},e),children:o.map(({value:e,label:t,attributes:s})=>(0,r.jsx)("li",{role:"tab",tabIndex:n===e?0:-1,"aria-selected":n===e,ref:e=>{l.push(e)},onKeyDown:p,onClick:u,...s,className:(0,a.A)("tabs__item","tabItem_FBMP",s?.className,{"tabs__item--active":n===e}),children:t??e},e))})}function x({lazy:e,children:t,selectedValue:n}){let i=(Array.isArray(t)?t:[t]).filter(Boolean);if(e){let e=i.find(e=>e.props.value===n);return e?(0,s.cloneElement)(e,{className:(0,a.A)("margin-top--md",e.props.className)}):null}return(0,r.jsx)("div",{className:"margin-top--md",children:i.map((e,t)=>(0,s.cloneElement)(e,{key:t,hidden:e.props.value!==n}))})}function v(e){let t=function(e){let t,{defaultValue:n,queryString:r=!1,groupId:a}=e,i=function(e){let{values:t,children:n}=e;return(0,s.useMemo)(()=>{let e=t??d(n).map(({props:{value:e,label:t,attributes:n,default:r}})=>({value:e,label:t,attributes:n,default:r})),r=(0,u.XI)(e,(e,t)=>e.value===t.value);if(r.length>0)throw Error(`Docusaurus error: Duplicate values "${r.map(e=>e.value).join(", ")}" found in <Tabs>. Every value needs to be unique.`);return e},[t,n])}(e),[f,m]=(0,s.useState)(()=>(function({defaultValue:e,tabValues:t}){if(0===t.length)throw Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(e){if(!h({value:e,tabValues:t}))throw Error(`Docusaurus error: The <Tabs> has a defaultValue "${e}" but none of its children has the corresponding value. Available values are: ${t.map(e=>e.value).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return e}let n=t.find(e=>e.default)??t[0];if(!n)throw Error("Unexpected error: 0 tabValues");return n.value})({defaultValue:n,tabValues:i})),[x,v]=function({queryString:e=!1,groupId:t}){let n=(0,o.W6)(),r=function({queryString:e=!1,groupId:t}){if("string"==typeof e)return e;if(!1===e)return null;if(!0===e&&!t)throw Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return t??null}({queryString:e,groupId:t});return[(0,c.aZ)(r),(0,s.useCallback)(e=>{if(!r)return;let t=new URLSearchParams(n.location.search);t.set(r,e),n.replace({...n.location,search:t.toString()})},[r,n])]}({queryString:r,groupId:a}),[g,b]=function({groupId:e}){let t=e?`docusaurus.tab.${e}`:null,[n,r]=(0,p.Dv)(t);return[n,(0,s.useCallback)(e=>{t&&r.set(e)},[t,r])]}({groupId:a}),j=h({value:t=x??g,tabValues:i})?t:null;return(0,l.A)(()=>{j&&m(j)},[j]),{selectedValue:f,selectValue:(0,s.useCallback)(e=>{if(!h({value:e,tabValues:i}))throw Error(`Can't select invalid tab value=${e}`);m(e),v(e),b(e)},[v,b,i]),tabValues:i}}(e);return(0,r.jsxs)("div",{className:(0,a.A)("tabs-container","tabList_urqy"),children:[(0,r.jsx)(m,{...t,...e}),(0,r.jsx)(x,{...t,...e})]})}function g(e){let t=(0,f.A)();return(0,r.jsx)(v,{...e,children:d(e.children)},String(t))}}}]);